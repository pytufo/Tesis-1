{"ast":null,"code":"import*as React from'react';import Keyboard from\"react-native-web/dist/exports/Keyboard\";import TextInput from\"react-native-web/dist/exports/TextInput\";export default function useKeyboardManager(isEnabled){var previouslyFocusedTextInputRef=React.useRef(undefined);var startTimestampRef=React.useRef(0);var keyboardTimeoutRef=React.useRef();var clearKeyboardTimeout=React.useCallback(function(){if(keyboardTimeoutRef.current!==undefined){clearTimeout(keyboardTimeoutRef.current);keyboardTimeoutRef.current=undefined;}},[]);var onPageChangeStart=React.useCallback(function(){if(!isEnabled()){return;}clearKeyboardTimeout();var input=TextInput.State.currentlyFocusedInput();input===null||input===void 0?void 0:input.blur();previouslyFocusedTextInputRef.current=input;startTimestampRef.current=Date.now();},[clearKeyboardTimeout,isEnabled]);var onPageChangeConfirm=React.useCallback(function(force){if(!isEnabled()){return;}clearKeyboardTimeout();if(force){Keyboard.dismiss();}else{var input=previouslyFocusedTextInputRef.current;input===null||input===void 0?void 0:input.blur();}previouslyFocusedTextInputRef.current=undefined;},[clearKeyboardTimeout,isEnabled]);var onPageChangeCancel=React.useCallback(function(){if(!isEnabled()){return;}clearKeyboardTimeout();var input=previouslyFocusedTextInputRef.current;if(input){if(Date.now()-startTimestampRef.current<100){keyboardTimeoutRef.current=setTimeout(function(){input===null||input===void 0?void 0:input.focus();previouslyFocusedTextInputRef.current=undefined;},100);}else{input===null||input===void 0?void 0:input.focus();previouslyFocusedTextInputRef.current=undefined;}}},[clearKeyboardTimeout,isEnabled]);React.useEffect(function(){return function(){return clearKeyboardTimeout();};},[clearKeyboardTimeout]);return{onPageChangeStart:onPageChangeStart,onPageChangeConfirm:onPageChangeConfirm,onPageChangeCancel:onPageChangeCancel};}","map":{"version":3,"names":["React","Keyboard","TextInput","useKeyboardManager","isEnabled","previouslyFocusedTextInputRef","useRef","undefined","startTimestampRef","keyboardTimeoutRef","clearKeyboardTimeout","useCallback","current","clearTimeout","onPageChangeStart","input","State","currentlyFocusedInput","blur","Date","now","onPageChangeConfirm","force","dismiss","onPageChangeCancel","setTimeout","focus","useEffect"],"sources":["/home/pytufo/Escritorio/Tesis-master/frontend/node_modules/@react-navigation/stack/src/utils/useKeyboardManager.tsx"],"sourcesContent":["import * as React from 'react';\nimport { HostComponent, Keyboard, TextInput } from 'react-native';\n\ntype InputRef = React.ElementRef<HostComponent<unknown>> | undefined;\n\nexport default function useKeyboardManager(isEnabled: () => boolean) {\n  // Numeric id of the previously focused text input\n  // When a gesture didn't change the tab, we can restore the focused input with this\n  const previouslyFocusedTextInputRef = React.useRef<InputRef>(undefined);\n  const startTimestampRef = React.useRef<number>(0);\n  const keyboardTimeoutRef = React.useRef<any>();\n\n  const clearKeyboardTimeout = React.useCallback(() => {\n    if (keyboardTimeoutRef.current !== undefined) {\n      clearTimeout(keyboardTimeoutRef.current);\n      keyboardTimeoutRef.current = undefined;\n    }\n  }, []);\n\n  const onPageChangeStart = React.useCallback(() => {\n    if (!isEnabled()) {\n      return;\n    }\n\n    clearKeyboardTimeout();\n\n    const input: InputRef = TextInput.State.currentlyFocusedInput();\n\n    // When a page change begins, blur the currently focused input\n    input?.blur();\n\n    // Store the id of this input so we can refocus it if change was cancelled\n    previouslyFocusedTextInputRef.current = input;\n\n    // Store timestamp for touch start\n    startTimestampRef.current = Date.now();\n  }, [clearKeyboardTimeout, isEnabled]);\n\n  const onPageChangeConfirm = React.useCallback(\n    (force: boolean) => {\n      if (!isEnabled()) {\n        return;\n      }\n\n      clearKeyboardTimeout();\n\n      if (force) {\n        // Always dismiss input, even if we don't have a ref to it\n        // We might not have the ref if onPageChangeStart was never called\n        // This can happen if page change was not from a gesture\n        Keyboard.dismiss();\n      } else {\n        const input = previouslyFocusedTextInputRef.current;\n\n        // Dismiss the keyboard only if an input was a focused before\n        // This makes sure we don't dismiss input on going back and focusing an input\n        input?.blur();\n      }\n\n      // Cleanup the ID on successful page change\n      previouslyFocusedTextInputRef.current = undefined;\n    },\n    [clearKeyboardTimeout, isEnabled]\n  );\n\n  const onPageChangeCancel = React.useCallback(() => {\n    if (!isEnabled()) {\n      return;\n    }\n\n    clearKeyboardTimeout();\n\n    // The page didn't change, we should restore the focus of text input\n    const input = previouslyFocusedTextInputRef.current;\n\n    if (input) {\n      // If the interaction was super short we should make sure keyboard won't hide again.\n\n      // Too fast input refocus will result only in keyboard flashing on screen and hiding right away.\n      // During first ~100ms keyboard will be dismissed no matter what,\n      // so we have to make sure it won't interrupt input refocus logic.\n      // That's why when the interaction is shorter than 100ms we add delay so it won't hide once again.\n      // Subtracting timestamps makes us sure the delay is executed only when needed.\n      if (Date.now() - startTimestampRef.current < 100) {\n        keyboardTimeoutRef.current = setTimeout(() => {\n          input?.focus();\n          previouslyFocusedTextInputRef.current = undefined;\n        }, 100);\n      } else {\n        input?.focus();\n        previouslyFocusedTextInputRef.current = undefined;\n      }\n    }\n  }, [clearKeyboardTimeout, isEnabled]);\n\n  React.useEffect(() => {\n    return () => clearKeyboardTimeout();\n  }, [clearKeyboardTimeout]);\n\n  return {\n    onPageChangeStart,\n    onPageChangeConfirm,\n    onPageChangeCancel,\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}