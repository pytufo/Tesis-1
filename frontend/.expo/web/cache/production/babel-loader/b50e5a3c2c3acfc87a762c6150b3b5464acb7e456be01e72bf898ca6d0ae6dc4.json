{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"mode\",\"children\",\"icon\",\"avatar\",\"selected\",\"disabled\",\"background\",\"accessibilityLabel\",\"closeIconAccessibilityLabel\",\"onPress\",\"onLongPress\",\"onPressOut\",\"onPressIn\",\"delayLongPress\",\"onClose\",\"closeIcon\",\"textStyle\",\"style\",\"theme\",\"testID\",\"selectedColor\",\"rippleColor\",\"showSelectedOverlay\",\"showSelectedCheck\",\"ellipsizeMode\",\"compact\",\"elevated\",\"maxFontSizeMultiplier\"];function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter(function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable;})),t.push.apply(t,o);}return t;}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach(function(r){_defineProperty(e,r,t[r]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach(function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r));});}return e;}function _extends(){_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import*as React from'react';import Animated from\"react-native-web/dist/exports/Animated\";import Platform from\"react-native-web/dist/exports/Platform\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Pressable from\"react-native-web/dist/exports/Pressable\";import View from\"react-native-web/dist/exports/View\";import useLatestCallback from'use-latest-callback';import{getChipColors}from\"./helpers\";import{useInternalTheme}from\"../../core/theming\";import{white}from\"../../styles/themes/v2/colors\";import hasTouchHandler from\"../../utils/hasTouchHandler\";import Icon from\"../Icon\";import MaterialCommunityIcon from\"../MaterialCommunityIcon\";import Surface from\"../Surface\";import TouchableRipple from\"../TouchableRipple/TouchableRipple\";import Text from\"../Typography/Text\";var Chip=function Chip(_ref){var _ref$mode=_ref.mode,mode=_ref$mode===void 0?'flat':_ref$mode,children=_ref.children,icon=_ref.icon,avatar=_ref.avatar,_ref$selected=_ref.selected,selected=_ref$selected===void 0?false:_ref$selected,_ref$disabled=_ref.disabled,disabled=_ref$disabled===void 0?false:_ref$disabled,background=_ref.background,accessibilityLabel=_ref.accessibilityLabel,_ref$closeIconAccessi=_ref.closeIconAccessibilityLabel,closeIconAccessibilityLabel=_ref$closeIconAccessi===void 0?'Close':_ref$closeIconAccessi,onPress=_ref.onPress,onLongPress=_ref.onLongPress,onPressOut=_ref.onPressOut,onPressIn=_ref.onPressIn,delayLongPress=_ref.delayLongPress,onClose=_ref.onClose,closeIcon=_ref.closeIcon,textStyle=_ref.textStyle,style=_ref.style,themeOverrides=_ref.theme,_ref$testID=_ref.testID,testID=_ref$testID===void 0?'chip':_ref$testID,selectedColor=_ref.selectedColor,customRippleColor=_ref.rippleColor,_ref$showSelectedOver=_ref.showSelectedOverlay,showSelectedOverlay=_ref$showSelectedOver===void 0?false:_ref$showSelectedOver,_ref$showSelectedChec=_ref.showSelectedCheck,showSelectedCheck=_ref$showSelectedChec===void 0?true:_ref$showSelectedChec,ellipsizeMode=_ref.ellipsizeMode,compact=_ref.compact,_ref$elevated=_ref.elevated,elevated=_ref$elevated===void 0?false:_ref$elevated,maxFontSizeMultiplier=_ref.maxFontSizeMultiplier,rest=_objectWithoutProperties(_ref,_excluded);var theme=useInternalTheme(themeOverrides);var isV3=theme.isV3,roundness=theme.roundness;var _React$useRef=React.useRef(new Animated.Value(isV3&&elevated?1:0)),elevation=_React$useRef.current;var hasPassedTouchHandler=hasTouchHandler({onPress:onPress,onLongPress:onLongPress,onPressIn:onPressIn,onPressOut:onPressOut});var isOutlined=mode==='outlined';var handlePressIn=useLatestCallback(function(e){var scale=theme.animation.scale;onPressIn===null||onPressIn===void 0?void 0:onPressIn(e);Animated.timing(elevation,{toValue:isV3?elevated?2:0:4,duration:200*scale,useNativeDriver:Platform.OS==='web'||Platform.constants.reactNativeVersion.minor<=72}).start();});var handlePressOut=useLatestCallback(function(e){var scale=theme.animation.scale;onPressOut===null||onPressOut===void 0?void 0:onPressOut(e);Animated.timing(elevation,{toValue:isV3&&elevated?1:0,duration:150*scale,useNativeDriver:Platform.OS==='web'||Platform.constants.reactNativeVersion.minor<=72}).start();});var opacity=isV3?0.38:0.26;var defaultBorderRadius=roundness*(isV3?2:4);var iconSize=isV3?18:16;var _ref2=StyleSheet.flatten(style)||{},customBackgroundColor=_ref2.backgroundColor,_ref2$borderRadius=_ref2.borderRadius,borderRadius=_ref2$borderRadius===void 0?defaultBorderRadius:_ref2$borderRadius;var _getChipColors=getChipColors({isOutlined:isOutlined,theme:theme,selectedColor:selectedColor,showSelectedOverlay:showSelectedOverlay,customBackgroundColor:customBackgroundColor,disabled:disabled,customRippleColor:customRippleColor}),borderColor=_getChipColors.borderColor,textColor=_getChipColors.textColor,iconColor=_getChipColors.iconColor,rippleColor=_getChipColors.rippleColor,selectedBackgroundColor=_getChipColors.selectedBackgroundColor,backgroundColor=_getChipColors.backgroundColor;var accessibilityState={selected:selected,disabled:disabled};var elevationStyle=isV3||Platform.OS==='android'?elevation:0;var multiplier=isV3?compact?1.5:2:1;var labelSpacings={marginRight:onClose?0:8*multiplier,marginLeft:avatar||icon||selected&&showSelectedCheck?4*multiplier:8*multiplier};var contentSpacings={paddingRight:isV3?onClose?34:0:onClose?32:4};var labelTextStyle=_objectSpread({color:textColor},isV3?theme.fonts.labelLarge:theme.fonts.regular);return React.createElement(Surface,_extends({style:[styles.container,isV3&&(isOutlined?styles.md3OutlineContainer:styles.md3FlatContainer),!theme.isV3&&{elevation:elevationStyle},{backgroundColor:selected?selectedBackgroundColor:backgroundColor,borderColor:borderColor,borderRadius:borderRadius},style]},theme.isV3&&{elevation:elevationStyle},rest,{testID:`${testID}-container`,theme:theme}),React.createElement(TouchableRipple,{borderless:true,background:background,style:[{borderRadius:borderRadius},styles.touchable],onPress:onPress,onLongPress:onLongPress,onPressIn:hasPassedTouchHandler?handlePressIn:undefined,onPressOut:hasPassedTouchHandler?handlePressOut:undefined,delayLongPress:delayLongPress,rippleColor:rippleColor,disabled:disabled,accessibilityLabel:accessibilityLabel,accessibilityRole:\"button\",accessibilityState:accessibilityState,testID:testID,theme:theme},React.createElement(View,{style:[styles.content,isV3&&styles.md3Content,contentSpacings]},avatar&&!icon?React.createElement(View,{style:[styles.avatarWrapper,isV3&&styles.md3AvatarWrapper,disabled&&{opacity:opacity}]},React.isValidElement(avatar)?React.cloneElement(avatar,{style:[styles.avatar,avatar.props.style]}):avatar):null,icon||selected&&showSelectedCheck?React.createElement(View,{style:[styles.icon,isV3&&styles.md3Icon,avatar?[styles.avatar,styles.avatarSelected,isV3&&selected&&styles.md3SelectedIcon]:null]},icon?React.createElement(Icon,{source:icon,color:avatar?white:!disabled&&theme.isV3?theme.colors.primary:iconColor,size:18,theme:theme}):React.createElement(MaterialCommunityIcon,{name:\"check\",color:avatar?white:iconColor,size:18,direction:\"ltr\"})):null,React.createElement(Text,{variant:\"labelLarge\",selectable:false,numberOfLines:1,style:[isV3?styles.md3LabelText:styles.labelText,labelTextStyle,labelSpacings,textStyle],ellipsizeMode:ellipsizeMode,maxFontSizeMultiplier:maxFontSizeMultiplier},children))),onClose?React.createElement(View,{style:styles.closeButtonStyle},React.createElement(Pressable,{onPress:onClose,disabled:disabled,accessibilityRole:\"button\",accessibilityLabel:closeIconAccessibilityLabel},React.createElement(View,{style:[styles.icon,styles.closeIcon,isV3&&styles.md3CloseIcon]},closeIcon?React.createElement(Icon,{source:closeIcon,color:iconColor,size:iconSize}):React.createElement(MaterialCommunityIcon,{name:isV3?'close':'close-circle',size:iconSize,color:iconColor,direction:\"ltr\"})))):null);};var styles=StyleSheet.create({container:{borderWidth:StyleSheet.hairlineWidth,borderStyle:'solid',flexDirection:Platform.select({default:'column',web:'row'})},md3OutlineContainer:{borderWidth:1},md3FlatContainer:{borderWidth:0},content:{flexDirection:'row',alignItems:'center',paddingLeft:4,position:'relative'},md3Content:{paddingLeft:0},icon:{padding:4,alignSelf:'center'},md3Icon:{paddingLeft:8,paddingRight:0},closeIcon:{marginRight:4},md3CloseIcon:{marginRight:8,padding:0},labelText:{minHeight:24,lineHeight:24,textAlignVertical:'center',marginVertical:4},md3LabelText:{textAlignVertical:'center',marginVertical:6},avatar:{width:24,height:24,borderRadius:12},avatarWrapper:{marginRight:4},md3AvatarWrapper:{marginLeft:4,marginRight:0},md3SelectedIcon:{paddingLeft:4},avatarSelected:{position:'absolute',top:4,left:4,backgroundColor:'rgba(0, 0, 0, .29)'},closeButtonStyle:{position:'absolute',right:0,height:'100%',justifyContent:'center',alignItems:'center'},touchable:{width:'100%'}});export default Chip;","map":{"version":3,"names":["React","Animated","Platform","StyleSheet","Pressable","View","useLatestCallback","getChipColors","useInternalTheme","white","hasTouchHandler","Icon","MaterialCommunityIcon","Surface","TouchableRipple","Text","Chip","_ref","_ref$mode","mode","children","icon","avatar","_ref$selected","selected","_ref$disabled","disabled","background","accessibilityLabel","_ref$closeIconAccessi","closeIconAccessibilityLabel","onPress","onLongPress","onPressOut","onPressIn","delayLongPress","onClose","closeIcon","textStyle","style","themeOverrides","theme","_ref$testID","testID","selectedColor","customRippleColor","rippleColor","_ref$showSelectedOver","showSelectedOverlay","_ref$showSelectedChec","showSelectedCheck","ellipsizeMode","compact","_ref$elevated","elevated","maxFontSizeMultiplier","rest","_objectWithoutProperties","_excluded","isV3","roundness","_React$useRef","useRef","Value","elevation","current","hasPassedTouchHandler","isOutlined","handlePressIn","e","scale","animation","timing","toValue","duration","useNativeDriver","OS","constants","reactNativeVersion","minor","start","handlePressOut","opacity","defaultBorderRadius","iconSize","_ref2","flatten","customBackgroundColor","backgroundColor","_ref2$borderRadius","borderRadius","_getChipColors","borderColor","textColor","iconColor","selectedBackgroundColor","accessibilityState","elevationStyle","multiplier","labelSpacings","marginRight","marginLeft","contentSpacings","paddingRight","labelTextStyle","_objectSpread","color","fonts","labelLarge","regular","createElement","_extends","styles","container","md3OutlineContainer","md3FlatContainer","borderless","touchable","undefined","accessibilityRole","content","md3Content","avatarWrapper","md3AvatarWrapper","isValidElement","cloneElement","props","md3Icon","avatarSelected","md3SelectedIcon","source","colors","primary","size","name","direction","variant","selectable","numberOfLines","md3LabelText","labelText","closeButtonStyle","md3CloseIcon","create","borderWidth","hairlineWidth","borderStyle","flexDirection","select","default","web","alignItems","paddingLeft","position","padding","alignSelf","minHeight","lineHeight","textAlignVertical","marginVertical","width","height","top","left","right","justifyContent"],"sources":["/home/pytufo/Escritorio/Tesis-master/frontend/node_modules/react-native-paper/src/components/Chip/Chip.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  AccessibilityState,\n  Animated,\n  ColorValue,\n  GestureResponderEvent,\n  Platform,\n  PressableAndroidRippleConfig,\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  Pressable,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport useLatestCallback from 'use-latest-callback';\n\nimport { getChipColors } from './helpers';\nimport { useInternalTheme } from '../../core/theming';\nimport { white } from '../../styles/themes/v2/colors';\nimport type { $Omit, EllipsizeProp, ThemeProp } from '../../types';\nimport hasTouchHandler from '../../utils/hasTouchHandler';\nimport type { IconSource } from '../Icon';\nimport Icon from '../Icon';\nimport MaterialCommunityIcon from '../MaterialCommunityIcon';\nimport Surface from '../Surface';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport Text from '../Typography/Text';\n\nexport type Props = $Omit<React.ComponentProps<typeof Surface>, 'mode'> & {\n  /**\n   * Mode of the chip.\n   * - `flat` - flat chip without outline.\n   * - `outlined` - chip with an outline.\n   */\n  mode?: 'flat' | 'outlined';\n  /**\n   * Text content of the `Chip`.\n   */\n  children: React.ReactNode;\n  /**\n   * Icon to display for the `Chip`. Both icon and avatar cannot be specified.\n   */\n  icon?: IconSource;\n  /**\n   * Avatar to display for the `Chip`. Both icon and avatar cannot be specified.\n   */\n  avatar?: React.ReactNode;\n  /**\n   * Icon to display as the close button for the `Chip`. The icon appears only when the onClose prop is specified.\n   */\n  closeIcon?: IconSource;\n  /**\n   * Whether chip is selected.\n   */\n  selected?: boolean;\n  /**\n   * Whether to style the chip color as selected.\n   * Note: With theme version 3 `selectedColor` doesn't apply to the `icon`.\n   *       If you want specify custom color for the `icon`, render your own `Icon` component.\n   */\n  selectedColor?: string;\n  /**\n   * @supported Available in v5.x with theme version 3\n   * Whether to display overlay on selected chip\n   */\n  showSelectedOverlay?: boolean;\n  /**\n   * Whether to display default check icon on selected chip.\n   * Note: Check will not be shown if `icon` is specified. If specified, `icon` will be shown regardless of `selected`.\n   */\n  showSelectedCheck?: boolean;\n  /**\n   * Color of the ripple effect.\n   */\n  rippleColor?: ColorValue;\n  /**\n   * Whether the chip is disabled. A disabled chip is greyed out and `onPress` is not called on touch.\n   */\n  disabled?: boolean;\n  /**\n   * Type of background drawabale to display the feedback (Android).\n   * https://reactnative.dev/docs/pressable#rippleconfig\n   */\n  background?: PressableAndroidRippleConfig;\n  /**\n   * Accessibility label for the chip. This is read by the screen reader when the user taps the chip.\n   */\n  accessibilityLabel?: string;\n  /**\n   * Accessibility label for the close icon. This is read by the screen reader when the user taps the close icon.\n   */\n  closeIconAccessibilityLabel?: string;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: (e: GestureResponderEvent) => void;\n  /**\n   * Function to execute on long press.\n   */\n  onLongPress?: () => void;\n  /**\n   * Function to execute as soon as the touchable element is pressed and invoked even before onPress.\n   */\n  onPressIn?: (e: GestureResponderEvent) => void;\n  /**\n   * Function to execute as soon as the touch is released even before onPress.\n   */\n  onPressOut?: (e: GestureResponderEvent) => void;\n  /**\n   * Function to execute on close button press. The close button appears only when this prop is specified.\n   */\n  onClose?: () => void;\n  /**\n   * The number of milliseconds a user must touch the element before executing `onLongPress`.\n   */\n  delayLongPress?: number;\n  /**\n   * @supported Available in v5.x with theme version 3\n   * Sets smaller horizontal paddings `12dp` around label, when there is only label.\n   */\n  compact?: boolean;\n  /**\n   * @supported Available in v5.x with theme version 3\n   * Whether chip should have the elevation.\n   */\n  elevated?: boolean;\n  /**\n   * Style of chip's text\n   */\n  textStyle?: StyleProp<TextStyle>;\n  style?: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n  /**\n   * Pass down testID from chip props to touchable for Detox tests.\n   */\n  testID?: string;\n  /**\n   * Ellipsize Mode for the children text\n   */\n  ellipsizeMode?: EllipsizeProp;\n  /**\n   * Specifies the largest possible scale a text font can reach.\n   */\n  maxFontSizeMultiplier?: number;\n};\n\n/**\n * Chips are compact elements that can represent inputs, attributes, or actions.\n * They can have an icon or avatar on the left, and a close button icon on the right.\n * They are typically used to:\n * <ul>\n *  <li>Present multiple options </li>\n *  <li>Represent attributes active or chosen </li>\n *  <li>Present filter options </li>\n *  <li>Trigger actions related to primary content </li>\n * </ul>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Chip } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <Chip icon=\"information\" onPress={() => console.log('Pressed')}>Example Chip</Chip>\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst Chip = ({\n  mode = 'flat',\n  children,\n  icon,\n  avatar,\n  selected = false,\n  disabled = false,\n  background,\n  accessibilityLabel,\n  closeIconAccessibilityLabel = 'Close',\n  onPress,\n  onLongPress,\n  onPressOut,\n  onPressIn,\n  delayLongPress,\n  onClose,\n  closeIcon,\n  textStyle,\n  style,\n  theme: themeOverrides,\n  testID = 'chip',\n  selectedColor,\n  rippleColor: customRippleColor,\n  showSelectedOverlay = false,\n  showSelectedCheck = true,\n  ellipsizeMode,\n  compact,\n  elevated = false,\n  maxFontSizeMultiplier,\n  ...rest\n}: Props) => {\n  const theme = useInternalTheme(themeOverrides);\n  const { isV3, roundness } = theme;\n\n  const { current: elevation } = React.useRef<Animated.Value>(\n    new Animated.Value(isV3 && elevated ? 1 : 0)\n  );\n\n  const hasPassedTouchHandler = hasTouchHandler({\n    onPress,\n    onLongPress,\n    onPressIn,\n    onPressOut,\n  });\n\n  const isOutlined = mode === 'outlined';\n\n  const handlePressIn = useLatestCallback((e: GestureResponderEvent) => {\n    const { scale } = theme.animation;\n    onPressIn?.(e);\n    Animated.timing(elevation, {\n      toValue: isV3 ? (elevated ? 2 : 0) : 4,\n      duration: 200 * scale,\n      useNativeDriver:\n        Platform.OS === 'web' ||\n        Platform.constants.reactNativeVersion.minor <= 72,\n    }).start();\n  });\n\n  const handlePressOut = useLatestCallback((e: GestureResponderEvent) => {\n    const { scale } = theme.animation;\n    onPressOut?.(e);\n    Animated.timing(elevation, {\n      toValue: isV3 && elevated ? 1 : 0,\n      duration: 150 * scale,\n      useNativeDriver:\n        Platform.OS === 'web' ||\n        Platform.constants.reactNativeVersion.minor <= 72,\n    }).start();\n  });\n\n  const opacity = isV3 ? 0.38 : 0.26;\n  const defaultBorderRadius = roundness * (isV3 ? 2 : 4);\n  const iconSize = isV3 ? 18 : 16;\n\n  const {\n    backgroundColor: customBackgroundColor,\n    borderRadius = defaultBorderRadius,\n  } = (StyleSheet.flatten(style) || {}) as ViewStyle;\n\n  const {\n    borderColor,\n    textColor,\n    iconColor,\n    rippleColor,\n    selectedBackgroundColor,\n    backgroundColor,\n  } = getChipColors({\n    isOutlined,\n    theme,\n    selectedColor,\n    showSelectedOverlay,\n    customBackgroundColor,\n    disabled,\n    customRippleColor,\n  });\n\n  const accessibilityState: AccessibilityState = {\n    selected,\n    disabled,\n  };\n\n  const elevationStyle = isV3 || Platform.OS === 'android' ? elevation : 0;\n  const multiplier = isV3 ? (compact ? 1.5 : 2) : 1;\n  const labelSpacings = {\n    marginRight: onClose ? 0 : 8 * multiplier,\n    marginLeft:\n      avatar || icon || (selected && showSelectedCheck)\n        ? 4 * multiplier\n        : 8 * multiplier,\n  };\n  const contentSpacings = {\n    paddingRight: isV3 ? (onClose ? 34 : 0) : onClose ? 32 : 4,\n  };\n  const labelTextStyle = {\n    color: textColor,\n    ...(isV3 ? theme.fonts.labelLarge : theme.fonts.regular),\n  };\n  return (\n    <Surface\n      style={[\n        styles.container,\n        isV3 &&\n          (isOutlined ? styles.md3OutlineContainer : styles.md3FlatContainer),\n        !theme.isV3 && {\n          elevation: elevationStyle,\n        },\n        {\n          backgroundColor: selected ? selectedBackgroundColor : backgroundColor,\n          borderColor,\n          borderRadius,\n        },\n        style,\n      ]}\n      {...(theme.isV3 && { elevation: elevationStyle })}\n      {...rest}\n      testID={`${testID}-container`}\n      theme={theme}\n    >\n      <TouchableRipple\n        borderless\n        background={background}\n        style={[{ borderRadius }, styles.touchable]}\n        onPress={onPress}\n        onLongPress={onLongPress}\n        onPressIn={hasPassedTouchHandler ? handlePressIn : undefined}\n        onPressOut={hasPassedTouchHandler ? handlePressOut : undefined}\n        delayLongPress={delayLongPress}\n        rippleColor={rippleColor}\n        disabled={disabled}\n        accessibilityLabel={accessibilityLabel}\n        accessibilityRole=\"button\"\n        accessibilityState={accessibilityState}\n        testID={testID}\n        theme={theme}\n      >\n        <View\n          style={[styles.content, isV3 && styles.md3Content, contentSpacings]}\n        >\n          {avatar && !icon ? (\n            <View\n              style={[\n                styles.avatarWrapper,\n                isV3 && styles.md3AvatarWrapper,\n                disabled && { opacity },\n              ]}\n            >\n              {React.isValidElement(avatar)\n                ? React.cloneElement(avatar as React.ReactElement<any>, {\n                    style: [styles.avatar, avatar.props.style],\n                  })\n                : avatar}\n            </View>\n          ) : null}\n          {icon || (selected && showSelectedCheck) ? (\n            <View\n              style={[\n                styles.icon,\n                isV3 && styles.md3Icon,\n                avatar\n                  ? [\n                      styles.avatar,\n                      styles.avatarSelected,\n                      isV3 && selected && styles.md3SelectedIcon,\n                    ]\n                  : null,\n              ]}\n            >\n              {icon ? (\n                <Icon\n                  source={icon}\n                  color={\n                    avatar\n                      ? white\n                      : !disabled && theme.isV3\n                      ? theme.colors.primary\n                      : iconColor\n                  }\n                  size={18}\n                  theme={theme}\n                />\n              ) : (\n                <MaterialCommunityIcon\n                  name=\"check\"\n                  color={avatar ? white : iconColor}\n                  size={18}\n                  direction=\"ltr\"\n                />\n              )}\n            </View>\n          ) : null}\n          <Text\n            variant=\"labelLarge\"\n            selectable={false}\n            numberOfLines={1}\n            style={[\n              isV3 ? styles.md3LabelText : styles.labelText,\n              labelTextStyle,\n              labelSpacings,\n              textStyle,\n            ]}\n            ellipsizeMode={ellipsizeMode}\n            maxFontSizeMultiplier={maxFontSizeMultiplier}\n          >\n            {children}\n          </Text>\n        </View>\n      </TouchableRipple>\n      {onClose ? (\n        <View style={styles.closeButtonStyle}>\n          <Pressable\n            onPress={onClose}\n            disabled={disabled}\n            accessibilityRole=\"button\"\n            accessibilityLabel={closeIconAccessibilityLabel}\n          >\n            <View\n              style={[\n                styles.icon,\n                styles.closeIcon,\n                isV3 && styles.md3CloseIcon,\n              ]}\n            >\n              {closeIcon ? (\n                <Icon source={closeIcon} color={iconColor} size={iconSize} />\n              ) : (\n                <MaterialCommunityIcon\n                  name={isV3 ? 'close' : 'close-circle'}\n                  size={iconSize}\n                  color={iconColor}\n                  direction=\"ltr\"\n                />\n              )}\n            </View>\n          </Pressable>\n        </View>\n      ) : null}\n    </Surface>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    borderWidth: StyleSheet.hairlineWidth,\n    borderStyle: 'solid',\n    flexDirection: Platform.select({ default: 'column', web: 'row' }),\n  },\n  md3OutlineContainer: {\n    borderWidth: 1,\n  },\n  md3FlatContainer: {\n    borderWidth: 0,\n  },\n  content: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingLeft: 4,\n    position: 'relative',\n  },\n  md3Content: {\n    paddingLeft: 0,\n  },\n  icon: {\n    padding: 4,\n    alignSelf: 'center',\n  },\n  md3Icon: {\n    paddingLeft: 8,\n    paddingRight: 0,\n  },\n  closeIcon: {\n    marginRight: 4,\n  },\n  md3CloseIcon: {\n    marginRight: 8,\n    padding: 0,\n  },\n  labelText: {\n    minHeight: 24,\n    lineHeight: 24,\n    textAlignVertical: 'center',\n    marginVertical: 4,\n  },\n  md3LabelText: {\n    textAlignVertical: 'center',\n    marginVertical: 6,\n  },\n  avatar: {\n    width: 24,\n    height: 24,\n    borderRadius: 12,\n  },\n  avatarWrapper: {\n    marginRight: 4,\n  },\n  md3AvatarWrapper: {\n    marginLeft: 4,\n    marginRight: 0,\n  },\n  md3SelectedIcon: {\n    paddingLeft: 4,\n  },\n  // eslint-disable-next-line react-native/no-color-literals\n  avatarSelected: {\n    position: 'absolute',\n    top: 4,\n    left: 4,\n    backgroundColor: 'rgba(0, 0, 0, .29)',\n  },\n  closeButtonStyle: {\n    position: 'absolute',\n    right: 0,\n    height: '100%',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  touchable: {\n    width: '100%',\n  },\n});\n\nexport default Chip;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}