{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"enabled\"],_excluded2=[\"enabled\",\"active\"];function _extends(){_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import*as React from'react';import View from\"react-native-web/dist/exports/View\";var Screens;try{Screens=require('react-native-screens');}catch(e){}export var MaybeScreenContainer=function MaybeScreenContainer(_ref){var enabled=_ref.enabled,rest=_objectWithoutProperties(_ref,_excluded);if(Screens!=null){return React.createElement(Screens.ScreenContainer,_extends({enabled:enabled},rest));}return React.createElement(View,rest);};export var MaybeScreen=function MaybeScreen(_ref2){var enabled=_ref2.enabled,active=_ref2.active,rest=_objectWithoutProperties(_ref2,_excluded2);if(Screens!=null){return React.createElement(Screens.Screen,_extends({enabled:enabled,activityState:active},rest));}return React.createElement(View,rest);};","map":{"version":3,"names":["React","View","Screens","require","e","MaybeScreenContainer","_ref","enabled","rest","_objectWithoutProperties","_excluded","createElement","ScreenContainer","_extends","MaybeScreen","_ref2","active","_excluded2","Screen","activityState"],"sources":["/home/pytufo/Escritorio/Tesis-master/frontend/node_modules/@react-navigation/stack/src/views/Screens.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Animated, View, ViewProps } from 'react-native';\n\nlet Screens: typeof import('react-native-screens') | undefined;\n\ntry {\n  Screens = require('react-native-screens');\n} catch (e) {\n  // Ignore\n}\n\nexport const MaybeScreenContainer = ({\n  enabled,\n  ...rest\n}: ViewProps & {\n  enabled: boolean;\n  children: React.ReactNode;\n}) => {\n  if (Screens != null) {\n    return <Screens.ScreenContainer enabled={enabled} {...rest} />;\n  }\n\n  return <View {...rest} />;\n};\n\nexport const MaybeScreen = ({\n  enabled,\n  active,\n  ...rest\n}: ViewProps & {\n  enabled: boolean;\n  active: 0 | 1 | Animated.AnimatedInterpolation<0 | 1>;\n  children: React.ReactNode;\n  freezeOnBlur?: boolean;\n}) => {\n  if (Screens != null) {\n    return (\n      <Screens.Screen enabled={enabled} activityState={active} {...rest} />\n    );\n  }\n\n  return <View {...rest} />;\n};\n"],"mappings":"0bAAA,MAAO,GAAK,CAAAA,KAAK,KAAM,OAAO,QAAAC,IAAA,0CAG9B,GAAI,CAAAC,OAA0D,CAE9D,GAAI,CACFA,OAAO,CAAGC,OAAO,CAAC,sBAAsB,CAAC,CAC3C,CAAE,MAAOC,CAAC,CAAE,CACV,CAGF,MAAO,IAAM,CAAAC,oBAAoB,CAAG,QAAvB,CAAAA,oBAAoBA,CAAGC,IAAA,CAM9B,IALJ,CAAAC,OAAO,CAKRD,IAAA,CALCC,OAAO,CACJC,IAAA,CAAAC,wBAAA,CAIJH,IAAA,CAAAI,SAAA,EACC,GAAIR,OAAO,EAAI,IAAI,CAAE,CACnB,MAAO,CAAAF,KAAA,CAAAW,aAAA,CAACT,OAAO,CAACU,eAAe,CAAAC,QAAA,EAACN,OAAO,CAAEA,OAAQ,EAAKC,IAAI,EAAI,CAChE,CAEA,MAAO,CAAAR,KAAA,CAAAW,aAAA,CAACV,IAAI,CAAKO,IAAI,CAAI,CAC3B,CAAC,CAED,MAAO,IAAM,CAAAM,WAAW,CAAG,QAAd,CAAAA,WAAWA,CAAGC,KAAA,CASrB,IARJ,CAAAR,OAAO,CAQRQ,KAAA,CARCR,OAAO,CACPS,MAAM,CAOPD,KAAA,CAPCC,MAAM,CACHR,IAAA,CAAAC,wBAAA,CAMJM,KAAA,CAAAE,UAAA,EACC,GAAIf,OAAO,EAAI,IAAI,CAAE,CACnB,MACE,CAAAF,KAAA,CAAAW,aAAA,CAACT,OAAO,CAACgB,MAAM,CAAAL,QAAA,EAACN,OAAO,CAAEA,OAAQ,CAACY,aAAa,CAAEH,MAAO,EAAKR,IAAI,EAAI,CAEzE,CAEA,MAAO,CAAAR,KAAA,CAAAW,aAAA,CAACV,IAAI,CAAKO,IAAI,CAAI,CAC3B,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}