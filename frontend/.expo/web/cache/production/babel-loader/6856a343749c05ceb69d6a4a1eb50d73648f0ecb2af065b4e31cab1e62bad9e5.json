{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"id\",\"initialRouteName\",\"children\",\"screenListeners\",\"screenOptions\"];function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter(function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable;})),t.push.apply(t,o);}return t;}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach(function(r){_defineProperty(e,r,t[r]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach(function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r));});}return e;}function _extends(){_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import{createNavigatorFactory,StackActions,StackRouter,useNavigationBuilder}from'@react-navigation/native';import*as React from'react';import warnOnce from'warn-once';import StackView from\"../views/Stack/StackView\";function StackNavigator(_ref){var id=_ref.id,initialRouteName=_ref.initialRouteName,children=_ref.children,screenListeners=_ref.screenListeners,screenOptions=_ref.screenOptions,rest=_objectWithoutProperties(_ref,_excluded);var mode=rest.mode;warnOnce(mode!=null,`Stack Navigator: 'mode=\"${mode}\"' is deprecated. Use 'presentation: \"${mode}\"' in 'screenOptions' instead.\\n\\nSee https://reactnavigation.org/docs/stack-navigator#presentation for more details.`);var headerMode=rest.headerMode;warnOnce(headerMode==='none',`Stack Navigator: 'headerMode=\"none\"' is deprecated. Use 'headerShown: false' in 'screenOptions' instead.\\n\\nSee https://reactnavigation.org/docs/stack-navigator/#headershown for more details.`);warnOnce(headerMode!=null&&headerMode!=='none',`Stack Navigator: 'headerMode' is moved to 'options'. Moved it to 'screenOptions' to keep current behavior.\\n\\nSee https://reactnavigation.org/docs/stack-navigator/#headermode for more details.`);var keyboardHandlingEnabled=rest.keyboardHandlingEnabled;warnOnce(keyboardHandlingEnabled!==undefined,`Stack Navigator: 'keyboardHandlingEnabled' is moved to 'options'. Moved it to 'screenOptions' to keep current behavior.\\n\\nSee https://reactnavigation.org/docs/stack-navigator/#keyboardhandlingenabled for more details.`);var defaultScreenOptions={presentation:mode,headerShown:headerMode?headerMode!=='none':true,headerMode:headerMode&&headerMode!=='none'?headerMode:undefined,keyboardHandlingEnabled:keyboardHandlingEnabled};var _useNavigationBuilder=useNavigationBuilder(StackRouter,{id:id,initialRouteName:initialRouteName,children:children,screenListeners:screenListeners,screenOptions:screenOptions,defaultScreenOptions:defaultScreenOptions}),state=_useNavigationBuilder.state,descriptors=_useNavigationBuilder.descriptors,navigation=_useNavigationBuilder.navigation,NavigationContent=_useNavigationBuilder.NavigationContent;React.useEffect(function(){var _navigation$addListen;return(_navigation$addListen=navigation.addListener)===null||_navigation$addListen===void 0?void 0:_navigation$addListen.call(navigation,'tabPress',function(e){var isFocused=navigation.isFocused();requestAnimationFrame(function(){if(state.index>0&&isFocused&&!e.defaultPrevented){navigation.dispatch(_objectSpread(_objectSpread({},StackActions.popToTop()),{},{target:state.key}));}});});},[navigation,state.index,state.key]);return React.createElement(NavigationContent,null,React.createElement(StackView,_extends({},rest,{state:state,descriptors:descriptors,navigation:navigation})));}export default createNavigatorFactory(StackNavigator);","map":{"version":3,"names":["createNavigatorFactory","StackActions","StackRouter","useNavigationBuilder","React","warnOnce","StackView","StackNavigator","_ref","id","initialRouteName","children","screenListeners","screenOptions","rest","_objectWithoutProperties","_excluded","mode","headerMode","keyboardHandlingEnabled","undefined","defaultScreenOptions","presentation","headerShown","_useNavigationBuilder","state","descriptors","navigation","NavigationContent","useEffect","_navigation$addListen","addListener","call","e","isFocused","requestAnimationFrame","index","defaultPrevented","dispatch","_objectSpread","popToTop","target","key","createElement","_extends"],"sources":["/home/pytufo/Escritorio/Tesis-master/frontend/node_modules/@react-navigation/stack/src/navigators/createStackNavigator.tsx"],"sourcesContent":["import {\n  createNavigatorFactory,\n  DefaultNavigatorOptions,\n  EventArg,\n  ParamListBase,\n  StackActionHelpers,\n  StackActions,\n  StackNavigationState,\n  StackRouter,\n  StackRouterOptions,\n  useNavigationBuilder,\n} from '@react-navigation/native';\nimport * as React from 'react';\nimport warnOnce from 'warn-once';\n\nimport type {\n  StackHeaderMode,\n  StackNavigationConfig,\n  StackNavigationEventMap,\n  StackNavigationOptions,\n} from '../types';\nimport StackView from '../views/Stack/StackView';\n\ntype Props = DefaultNavigatorOptions<\n  ParamListBase,\n  StackNavigationState<ParamListBase>,\n  StackNavigationOptions,\n  StackNavigationEventMap\n> &\n  StackRouterOptions &\n  StackNavigationConfig;\n\nfunction StackNavigator({\n  id,\n  initialRouteName,\n  children,\n  screenListeners,\n  screenOptions,\n  ...rest\n}: Props) {\n  // @ts-expect-error: mode is deprecated\n  const mode = rest.mode as 'card' | 'modal' | undefined;\n\n  warnOnce(\n    mode != null,\n    `Stack Navigator: 'mode=\"${mode}\"' is deprecated. Use 'presentation: \"${mode}\"' in 'screenOptions' instead.\\n\\nSee https://reactnavigation.org/docs/stack-navigator#presentation for more details.`\n  );\n\n  // @ts-expect-error: headerMode='none' is deprecated\n  const headerMode = rest.headerMode as StackHeaderMode | 'none' | undefined;\n\n  warnOnce(\n    headerMode === 'none',\n    `Stack Navigator: 'headerMode=\"none\"' is deprecated. Use 'headerShown: false' in 'screenOptions' instead.\\n\\nSee https://reactnavigation.org/docs/stack-navigator/#headershown for more details.`\n  );\n\n  warnOnce(\n    headerMode != null && headerMode !== 'none',\n    `Stack Navigator: 'headerMode' is moved to 'options'. Moved it to 'screenOptions' to keep current behavior.\\n\\nSee https://reactnavigation.org/docs/stack-navigator/#headermode for more details.`\n  );\n\n  // @ts-expect-error: headerMode='none' is deprecated\n  const keyboardHandlingEnabled = rest.keyboardHandlingEnabled;\n\n  warnOnce(\n    keyboardHandlingEnabled !== undefined,\n    `Stack Navigator: 'keyboardHandlingEnabled' is moved to 'options'. Moved it to 'screenOptions' to keep current behavior.\\n\\nSee https://reactnavigation.org/docs/stack-navigator/#keyboardhandlingenabled for more details.`\n  );\n\n  const defaultScreenOptions: StackNavigationOptions = {\n    presentation: mode,\n    headerShown: headerMode ? headerMode !== 'none' : true,\n    headerMode: headerMode && headerMode !== 'none' ? headerMode : undefined,\n    keyboardHandlingEnabled,\n  };\n\n  const { state, descriptors, navigation, NavigationContent } =\n    useNavigationBuilder<\n      StackNavigationState<ParamListBase>,\n      StackRouterOptions,\n      StackActionHelpers<ParamListBase>,\n      StackNavigationOptions,\n      StackNavigationEventMap\n    >(StackRouter, {\n      id,\n      initialRouteName,\n      children,\n      screenListeners,\n      screenOptions,\n      defaultScreenOptions,\n    });\n\n  React.useEffect(\n    () =>\n      // @ts-expect-error: there may not be a tab navigator in parent\n      navigation.addListener?.('tabPress', (e) => {\n        const isFocused = navigation.isFocused();\n\n        // Run the operation in the next frame so we're sure all listeners have been run\n        // This is necessary to know if preventDefault() has been called\n        requestAnimationFrame(() => {\n          if (\n            state.index > 0 &&\n            isFocused &&\n            !(e as unknown as EventArg<'tabPress', true>).defaultPrevented\n          ) {\n            // When user taps on already focused tab and we're inside the tab,\n            // reset the stack to replicate native behaviour\n            navigation.dispatch({\n              ...StackActions.popToTop(),\n              target: state.key,\n            });\n          }\n        });\n      }),\n    [navigation, state.index, state.key]\n  );\n\n  return (\n    <NavigationContent>\n      <StackView\n        {...rest}\n        state={state}\n        descriptors={descriptors}\n        navigation={navigation}\n      />\n    </NavigationContent>\n  );\n}\n\nexport default createNavigatorFactory<\n  StackNavigationState<ParamListBase>,\n  StackNavigationOptions,\n  StackNavigationEventMap,\n  typeof StackNavigator\n>(StackNavigator);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}