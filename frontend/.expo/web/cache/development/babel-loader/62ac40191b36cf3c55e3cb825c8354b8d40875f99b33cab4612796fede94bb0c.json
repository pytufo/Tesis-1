{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState, useEffect } from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { UserProvider } from \"./contexts/UserContext\";\nimport { Provider as PaperProvider, DefaultTheme } from \"react-native-paper\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport AuthStackScreen from \"./AuthStackScreen\";\nimport AppTabsScreen from \"./AppTabsScreens\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport Navbar from \"./components/Navbar\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\nvar App = function App() {\n  var _useUser = useUser(),\n    isLoggedIn = _useUser.isLoggedIn;\n  return _jsx(PaperProvider, {\n    theme: DefaultTheme,\n    children: _jsx(UserProvider, {\n      children: _jsxs(NavigationContainer, {\n        children: [_jsx(Stack.Navigator, {\n          headerMode: \"none\",\n          children: isLoggedIn ? _jsx(Stack.Screen, {\n            name: \"AppTabs\",\n            children: function children(props) {\n              return _jsx(AppTabsScreen, _objectSpread({}, props));\n            }\n          }) : _jsx(Stack.Screen, {\n            name: \"AuthStack\",\n            component: AuthStackScreen\n          })\n        }), _jsx(ToastContainer, {})]\n      })\n    })\n  });\n};\nexport default App;","map":{"version":3,"names":["React","useState","useEffect","NavigationContainer","createStackNavigator","ToastContainer","UserProvider","Provider","PaperProvider","DefaultTheme","AsyncStorage","AuthStackScreen","AppTabsScreen","HomeScreen","Navbar","jsx","_jsx","jsxs","_jsxs","Stack","App","_useUser","useUser","isLoggedIn","theme","children","Navigator","headerMode","Screen","name","props","_objectSpread","component"],"sources":["/opt/frontend/app/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nimport { UserProvider } from \"./contexts/UserContext\";\nimport { Provider as PaperProvider, DefaultTheme } from \"react-native-paper\";\n\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport AuthStackScreen from \"./AuthStackScreen\";\nimport AppTabsScreen from \"./AppTabsScreens\";\n\nimport HomeScreen from \"./screens/HomeScreen\";\nimport Navbar from \"./components/Navbar\";\n\nconst Stack = createStackNavigator();\n\nconst App = () => {\n  const { isLoggedIn } = useUser();\n\n  return (\n    <PaperProvider theme={DefaultTheme}>\n      <UserProvider>\n        <NavigationContainer>\n          <Stack.Navigator headerMode=\"none\">\n            {isLoggedIn ? (\n              <Stack.Screen\n                name=\"AppTabs\"\n                children={(props) => <AppTabsScreen {...props} />}\n              />\n            ) : (\n              <Stack.Screen name=\"AuthStack\" component={AuthStackScreen} />\n            )}\n          </Stack.Navigator>\n          <ToastContainer />\n        </NavigationContainer>\n      </UserProvider>\n    </PaperProvider>\n  );\n};\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,oBAAoB,QAAQ,yBAAyB;AAC9D,SAASC,cAAc,QAAQ,gBAAgB;AAC/C,OAAO,uCAAuC;AAE9C,SAASC,YAAY;AACrB,SAASC,QAAQ,IAAIC,aAAa,EAAEC,YAAY,QAAQ,oBAAoB;AAE5E,OAAOC,YAAY,MAAM,2CAA2C;AACpE,OAAOC,eAAe;AACtB,OAAOC,aAAa;AAEpB,OAAOC,UAAU;AACjB,OAAOC,MAAM;AAA4B,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEzC,IAAMC,KAAK,GAAGf,oBAAoB,CAAC,CAAC;AAEpC,IAAMgB,GAAG,GAAG,SAANA,GAAGA,CAAA,EAAS;EAChB,IAAAC,QAAA,GAAuBC,OAAO,CAAC,CAAC;IAAxBC,UAAU,GAAAF,QAAA,CAAVE,UAAU;EAElB,OACEP,IAAA,CAACR,aAAa;IAACgB,KAAK,EAAEf,YAAa;IAAAgB,QAAA,EACjCT,IAAA,CAACV,YAAY;MAAAmB,QAAA,EACXP,KAAA,CAACf,mBAAmB;QAAAsB,QAAA,GAClBT,IAAA,CAACG,KAAK,CAACO,SAAS;UAACC,UAAU,EAAC,MAAM;UAAAF,QAAA,EAC/BF,UAAU,GACTP,IAAA,CAACG,KAAK,CAACS,MAAM;YACXC,IAAI,EAAC,SAAS;YACdJ,QAAQ,EAAE,SAAAA,SAACK,KAAK;cAAA,OAAKd,IAAA,CAACJ,aAAa,EAAAmB,aAAA,KAAKD,KAAK,CAAG,CAAC;YAAA;UAAC,CACnD,CAAC,GAEFd,IAAA,CAACG,KAAK,CAACS,MAAM;YAACC,IAAI,EAAC,WAAW;YAACG,SAAS,EAAErB;UAAgB,CAAE;QAC7D,CACc,CAAC,EAClBK,IAAA,CAACX,cAAc,IAAE,CAAC;MAAA,CACC;IAAC,CACV;EAAC,CACF,CAAC;AAEpB,CAAC;AAED,eAAee,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}