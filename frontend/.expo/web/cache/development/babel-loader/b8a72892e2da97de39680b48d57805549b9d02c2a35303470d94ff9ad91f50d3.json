{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { UserProvider, useUser } from \"./contexts/UserContext\";\nimport { Provider as PaperProvider, DefaultTheme } from \"react-native-paper\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport AuthStackScreen from \"./AuthStackScreen\";\nimport AppTabsScreen from \"./AppTabsScreens\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport Navbar from \"./components/Navbar\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\nvar _useUser = useUser(),\n  isLoggedIn = _useUser.isLoggedIn;\nvar App = function App() {\n  useEffect(function () {\n    var checkAuthentication = function () {\n      var _ref = _asyncToGenerator(function* () {\n        try {\n          var token = yield AsyncStorage.getItem(\"access_token\");\n          setIsLoggedIn(!!token);\n        } catch (error) {\n          console.error(\"error al autenticar\", error);\n        }\n      });\n      return function checkAuthentication() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    checkAuthentication();\n  }, []);\n  return _jsx(UserProvider, {\n    children: _jsx(PaperProvider, {\n      theme: DefaultTheme,\n      children: _jsxs(NavigationContainer, {\n        children: [_jsx(Stack.Navigator, {\n          headerMode: \"none\",\n          children: isLoggedIn ? _jsx(Stack.Screen, {\n            name: \"AppTabs\",\n            component: AppTabsScreen\n          }) : _jsx(Stack.Screen, {\n            name: \"AuthStack\",\n            component: AuthStackScreen\n          })\n        }), _jsx(ToastContainer, {})]\n      })\n    })\n  });\n};\nexport default App;","map":{"version":3,"names":["React","useState","useEffect","NavigationContainer","createStackNavigator","ToastContainer","UserProvider","useUser","Provider","PaperProvider","DefaultTheme","AsyncStorage","AuthStackScreen","AppTabsScreen","HomeScreen","Navbar","jsx","_jsx","jsxs","_jsxs","Stack","_useUser","isLoggedIn","App","checkAuthentication","_ref","_asyncToGenerator","token","getItem","setIsLoggedIn","error","console","apply","arguments","children","theme","Navigator","headerMode","Screen","name","component"],"sources":["/opt/frontend/app/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nimport { UserProvider, useUser } from \"./contexts/UserContext\";\nimport { Provider as PaperProvider, DefaultTheme } from \"react-native-paper\";\n\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport AuthStackScreen from \"./AuthStackScreen\";\nimport AppTabsScreen from \"./AppTabsScreens\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport Navbar from \"./components/Navbar\";\n\nconst Stack = createStackNavigator();\n\nconst { isLoggedIn } = useUser();\nconst App = () => {\n  useEffect(() => {\n    const checkAuthentication = async () => {\n      try {\n        const token = await AsyncStorage.getItem(\"access_token\");\n        setIsLoggedIn(!!token);\n      } catch (error) {\n        console.error(\"error al autenticar\", error);\n      }\n    };\n    checkAuthentication();\n  }, []);\n\n  return (\n    <UserProvider>\n      <PaperProvider theme={DefaultTheme}>\n        <NavigationContainer>\n          <Stack.Navigator headerMode=\"none\">\n            {isLoggedIn ? (\n              <Stack.Screen name=\"AppTabs\" component={AppTabsScreen} />\n            ) : (\n              <Stack.Screen name=\"AuthStack\" component={AuthStackScreen} />\n            )}\n          </Stack.Navigator>\n          <ToastContainer />\n        </NavigationContainer>\n      </PaperProvider>\n    </UserProvider>\n  );\n};\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,oBAAoB,QAAQ,yBAAyB;AAC9D,SAASC,cAAc,QAAQ,gBAAgB;AAC/C,OAAO,uCAAuC;AAE9C,SAASC,YAAY,EAAEC,OAAO;AAC9B,SAASC,QAAQ,IAAIC,aAAa,EAAEC,YAAY,QAAQ,oBAAoB;AAE5E,OAAOC,YAAY,MAAM,2CAA2C;AACpE,OAAOC,eAAe;AACtB,OAAOC,aAAa;AACpB,OAAOC,UAAU;AACjB,OAAOC,MAAM;AAA4B,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEzC,IAAMC,KAAK,GAAGhB,oBAAoB,CAAC,CAAC;AAEpC,IAAAiB,QAAA,GAAuBd,OAAO,CAAC,CAAC;EAAxBe,UAAU,GAAAD,QAAA,CAAVC,UAAU;AAClB,IAAMC,GAAG,GAAG,SAANA,GAAGA,CAAA,EAAS;EAChBrB,SAAS,CAAC,YAAM;IACd,IAAMsB,mBAAmB;MAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,aAAY;QACtC,IAAI;UACF,IAAMC,KAAK,SAAShB,YAAY,CAACiB,OAAO,CAAC,cAAc,CAAC;UACxDC,aAAa,CAAC,CAAC,CAACF,KAAK,CAAC;QACxB,CAAC,CAAC,OAAOG,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;QAC7C;MACF,CAAC;MAAA,gBAPKN,mBAAmBA,CAAA;QAAA,OAAAC,IAAA,CAAAO,KAAA,OAAAC,SAAA;MAAA;IAAA,GAOxB;IACDT,mBAAmB,CAAC,CAAC;EACvB,CAAC,EAAE,EAAE,CAAC;EAEN,OACEP,IAAA,CAACX,YAAY;IAAA4B,QAAA,EACXjB,IAAA,CAACR,aAAa;MAAC0B,KAAK,EAAEzB,YAAa;MAAAwB,QAAA,EACjCf,KAAA,CAAChB,mBAAmB;QAAA+B,QAAA,GAClBjB,IAAA,CAACG,KAAK,CAACgB,SAAS;UAACC,UAAU,EAAC,MAAM;UAAAH,QAAA,EAC/BZ,UAAU,GACTL,IAAA,CAACG,KAAK,CAACkB,MAAM;YAACC,IAAI,EAAC,SAAS;YAACC,SAAS,EAAE3B;UAAc,CAAE,CAAC,GAEzDI,IAAA,CAACG,KAAK,CAACkB,MAAM;YAACC,IAAI,EAAC,WAAW;YAACC,SAAS,EAAE5B;UAAgB,CAAE;QAC7D,CACc,CAAC,EAClBK,IAAA,CAACZ,cAAc,IAAE,CAAC;MAAA,CACC;IAAC,CACT;EAAC,CACJ,CAAC;AAEnB,CAAC;AAED,eAAekB,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}