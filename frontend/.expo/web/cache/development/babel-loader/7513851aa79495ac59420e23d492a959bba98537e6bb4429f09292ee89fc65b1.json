{"ast":null,"code":"import View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport React, { useEffect, useState } from \"react\";\nimport { useUser } from \"../../contexts/UserContext\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar ProfileScreen = function ProfileScreen() {\n  var _useUser = useUser(),\n    userInfo = _useUser.userInfo;\n  console.log(userInfo);\n  useEffect(function () {\n    var fetchReservaUsuario = async;\n  });\n  return _jsx(View, {\n    style: styles.container,\n    children: userInfo && _jsxs(_Fragment, {\n      children: [_jsxs(Text, {\n        children: [\"Email: \", userInfo.user.email]\n      }), _jsxs(Text, {\n        children: [\"Rol: \", userInfo.user.role]\n      }), _jsxs(View, {\n        style: styles.buttonContainer,\n        children: [_jsx(TouchableOpacity, {\n          style: styles.button,\n          onPress: function onPress() {},\n          children: _jsx(Text, {\n            style: styles.buttonText,\n            children: \"Notificaciones (0)\"\n          })\n        }), _jsx(TouchableOpacity, {\n          style: styles.button,\n          onPress: function onPress() {\n            console.log(userInfo);\n          },\n          children: _jsx(Text, {\n            style: styles.buttonText,\n            children: \"Mis reservas\"\n          })\n        }), _jsx(TouchableOpacity, {\n          style: styles.button,\n          onPress: function onPress() {},\n          children: _jsx(Text, {\n            style: styles.buttonText,\n            children: \"Mis prestamos\"\n          })\n        })]\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20\n  },\n  buttonContainer: {\n    flexDirection: \"column\",\n    marginTop: 10\n  },\n  button: {\n    backgroundColor: \"#3498db\",\n    padding: 15,\n    marginBottom: 10,\n    borderRadius: 5\n  },\n  buttonText: {\n    color: \"#fff\",\n    textAlign: \"center\",\n    fontWeight: \"bold\"\n  }\n});\nexport default ProfileScreen;","map":{"version":3,"names":["React","useEffect","useState","useUser","jsxs","_jsxs","jsx","_jsx","Fragment","_Fragment","ProfileScreen","_useUser","userInfo","console","log","fetchReservaUsuario","async","View","style","styles","container","children","Text","user","email","role","buttonContainer","TouchableOpacity","button","onPress","buttonText","StyleSheet","create","flex","padding","flexDirection","marginTop","backgroundColor","marginBottom","borderRadius","color","textAlign","fontWeight"],"sources":["/opt/frontend/app/screens/users/ProfileScreen.js"],"sourcesContent":["import { View, Text, TouchableOpacity, StyleSheet } from \"react-native\";\nimport React,{useEffect, useState} from \"react\";\nimport { useUser } from \"../../contexts/UserContext\";\n\nconst ProfileScreen = () => {\n  const { userInfo } = useUser();\n  console.log(userInfo);\n  useEffect(()  =>{\n    const fetchReservaUsuario = async \n\n  })\n  \n\n  return (\n    <View style={styles.container}>\n      {userInfo && (\n        <>\n          <Text>Email: {userInfo.user.email}</Text>\n          <Text>Rol: {userInfo.user.role}</Text>\n          <View style={styles.buttonContainer}>\n          <TouchableOpacity\n              style={styles.button}\n              onPress={() => {\n                // Manejar la acción del botón \"Mis prestamos\"\n              }}\n            >\n              <Text style={styles.buttonText}>Notificaciones (0)</Text>\n            </TouchableOpacity>\n            <TouchableOpacity\n              style={styles.button}\n              onPress={() => { console.log(userInfo)\n                // Manejar la acción del botón \"Mis reservas\"\n              }}\n            >\n              <Text style={styles.buttonText}>Mis reservas</Text>\n            </TouchableOpacity>\n\n            <TouchableOpacity\n              style={styles.button}\n              onPress={() => {\n                // Manejar la acción del botón \"Mis prestamos\"\n              }}\n            >\n              <Text style={styles.buttonText}>Mis prestamos</Text>\n            </TouchableOpacity>\n          </View>\n        </>\n      )}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20,\n  },\n  buttonContainer: {\n    flexDirection: \"column\",\n    marginTop: 10,\n  },\n  button: {\n    backgroundColor: \"#3498db\", // Puedes ajustar el color de fondo según tu diseño\n    padding: 15,\n    marginBottom: 10,\n    borderRadius: 5,\n  },\n  buttonText: {\n    color: \"#fff\", // Puedes ajustar el color del texto según tu diseño\n    textAlign: \"center\",\n    fontWeight: \"bold\",\n  },\n});\n\nexport default ProfileScreen;\n"],"mappings":";;;;AACA,OAAOA,KAAK,IAAEC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAC/C,SAASC,OAAO;AAAqC,SAAAC,IAAA,IAAAC,KAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAErD,IAAMC,aAAa,GAAG,SAAhBA,aAAaA,CAAA,EAAS;EAC1B,IAAAC,QAAA,GAAqBR,OAAO,CAAC,CAAC;IAAtBS,QAAQ,GAAAD,QAAA,CAARC,QAAQ;EAChBC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;EACrBX,SAAS,CAAC,YAAM;IACd,IAAMc,mBAAmB,GAAGC,KAAK;EAEnC,CAAC,CAAC;EAGF,OACET,IAAA,CAACU,IAAI;IAACC,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,EAC3BT,QAAQ,IACPP,KAAA,CAAAI,SAAA;MAAAY,QAAA,GACEhB,KAAA,CAACiB,IAAI;QAAAD,QAAA,GAAC,SAAO,EAACT,QAAQ,CAACW,IAAI,CAACC,KAAK;MAAA,CAAO,CAAC,EACzCnB,KAAA,CAACiB,IAAI;QAAAD,QAAA,GAAC,OAAK,EAACT,QAAQ,CAACW,IAAI,CAACE,IAAI;MAAA,CAAO,CAAC,EACtCpB,KAAA,CAACY,IAAI;QAACC,KAAK,EAAEC,MAAM,CAACO,eAAgB;QAAAL,QAAA,GACpCd,IAAA,CAACoB,gBAAgB;UACbT,KAAK,EAAEC,MAAM,CAACS,MAAO;UACrBC,OAAO,EAAE,SAAAA,QAAA,EAAM,CAEf,CAAE;UAAAR,QAAA,EAEFd,IAAA,CAACe,IAAI;YAACJ,KAAK,EAAEC,MAAM,CAACW,UAAW;YAAAT,QAAA,EAAC;UAAkB,CAAM;QAAC,CACzC,CAAC,EACnBd,IAAA,CAACoB,gBAAgB;UACfT,KAAK,EAAEC,MAAM,CAACS,MAAO;UACrBC,OAAO,EAAE,SAAAA,QAAA,EAAM;YAAEhB,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;UAEtC,CAAE;UAAAS,QAAA,EAEFd,IAAA,CAACe,IAAI;YAACJ,KAAK,EAAEC,MAAM,CAACW,UAAW;YAAAT,QAAA,EAAC;UAAY,CAAM;QAAC,CACnC,CAAC,EAEnBd,IAAA,CAACoB,gBAAgB;UACfT,KAAK,EAAEC,MAAM,CAACS,MAAO;UACrBC,OAAO,EAAE,SAAAA,QAAA,EAAM,CAEf,CAAE;UAAAR,QAAA,EAEFd,IAAA,CAACe,IAAI;YAACJ,KAAK,EAAEC,MAAM,CAACW,UAAW;YAAAT,QAAA,EAAC;UAAa,CAAM;QAAC,CACpC,CAAC;MAAA,CACf,CAAC;IAAA,CACP;EACH,CACG,CAAC;AAEX,CAAC;AAED,IAAMF,MAAM,GAAGY,UAAU,CAACC,MAAM,CAAC;EAC/BZ,SAAS,EAAE;IACTa,IAAI,EAAE,CAAC;IACPC,OAAO,EAAE;EACX,CAAC;EACDR,eAAe,EAAE;IACfS,aAAa,EAAE,QAAQ;IACvBC,SAAS,EAAE;EACb,CAAC;EACDR,MAAM,EAAE;IACNS,eAAe,EAAE,SAAS;IAC1BH,OAAO,EAAE,EAAE;IACXI,YAAY,EAAE,EAAE;IAChBC,YAAY,EAAE;EAChB,CAAC;EACDT,UAAU,EAAE;IACVU,KAAK,EAAE,MAAM;IACbC,SAAS,EAAE,QAAQ;IACnBC,UAAU,EAAE;EACd;AACF,CAAC,CAAC;AAEF,eAAehC,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}