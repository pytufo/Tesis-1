{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport React, { useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport AuthServices from \"../../services/AuthServices\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar LogoutScreen = function LogoutScreen(_ref) {\n  var setIsLoggedIn = _ref.setIsLoggedIn,\n    navigation = _ref.navigation;\n  var handleLogout = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        var access_token = yield AsyncStorage.getItem(\"access_token\");\n        yield AuthServices.logout(access_token);\n        yield AsyncStorage.removeItem(\"access_token\");\n        setIsLoggedIn(false);\n        navigation.navigate('AuthStack');\n      } catch (error) {\n        console.error(\"Error en el cierre de sesión:\", error);\n      }\n    });\n    return function handleLogout() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    handleLogout();\n  }, []);\n  return _jsx(View, {\n    children: _jsx(Text, {\n      children: \"Cerrando la sesion..\"\n    })\n  });\n};\nexport default LogoutScreen;","map":{"version":3,"names":["React","useEffect","View","Text","Button","AsyncStorage","AuthServices","jsx","_jsx","LogoutScreen","_ref","setIsLoggedIn","navigation","handleLogout","_ref2","_asyncToGenerator","access_token","getItem","logout","removeItem","navigate","error","console","apply","arguments","children"],"sources":["/opt/frontend/app/screens/auth/LogoutScreen.js"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport { View, Text, Button } from \"react-native\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport AuthServices from \"../../services/AuthServices\";\n\nconst LogoutScreen = ({ setIsLoggedIn, navigation }) => {\n  const handleLogout = async () => {\n    try {\n      const access_token = await AsyncStorage.getItem(\"access_token\");\n      await AuthServices.logout(access_token);\n      await AsyncStorage.removeItem(\"access_token\");\n      setIsLoggedIn(false);\n      navigation.navigate('AuthStack')\n    } catch (error) {\n      console.error(\"Error en el cierre de sesión:\", error);\n    }\n  };\n\n  useEffect(() => {\n    handleLogout();\n  }, []);\n\n  return (\n    <View>\n      <Text>Cerrando la sesion..</Text>\n    </View>\n  );\n};\n\nexport default LogoutScreen;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,MAAA;AAEzC,OAAOC,YAAY,MAAM,2CAA2C;AACpE,OAAOC,YAAY;AAAoC,SAAAC,GAAA,IAAAC,IAAA;AAEvD,IAAMC,YAAY,GAAG,SAAfA,YAAYA,CAAAC,IAAA,EAAsC;EAAA,IAAhCC,aAAa,GAAAD,IAAA,CAAbC,aAAa;IAAEC,UAAU,GAAAF,IAAA,CAAVE,UAAU;EAC/C,IAAMC,YAAY;IAAA,IAAAC,KAAA,GAAAC,iBAAA,CAAG,aAAY;MAC/B,IAAI;QACF,IAAMC,YAAY,SAASX,YAAY,CAACY,OAAO,CAAC,cAAc,CAAC;QAC/D,MAAMX,YAAY,CAACY,MAAM,CAACF,YAAY,CAAC;QACvC,MAAMX,YAAY,CAACc,UAAU,CAAC,cAAc,CAAC;QAC7CR,aAAa,CAAC,KAAK,CAAC;QACpBC,UAAU,CAACQ,QAAQ,CAAC,WAAW,CAAC;MAClC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACvD;IACF,CAAC;IAAA,gBAVKR,YAAYA,CAAA;MAAA,OAAAC,KAAA,CAAAS,KAAA,OAAAC,SAAA;IAAA;EAAA,GAUjB;EAEDvB,SAAS,CAAC,YAAM;IACdY,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,OACEL,IAAA,CAACN,IAAI;IAAAuB,QAAA,EACHjB,IAAA,CAACL,IAAI;MAAAsB,QAAA,EAAC;IAAoB,CAAM;EAAC,CAC7B,CAAC;AAEX,CAAC;AAED,eAAehB,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}