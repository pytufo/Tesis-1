{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport React, { useState, useEffect } from \"react\";\nimport { TextInput, Button, Snackbar, HelperText, List } from \"react-native-paper\";\nimport axios from \"axios\";\nimport MaterialServices from \"../../../services/MaterialServices\";\nimport AuthServices from \"../../../services/AuthServices\";\nimport { useUser } from \"../../../contexts/UserContext\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar PrestarMaterialScreen = function PrestarMaterialScreen(_ref) {\n  var route = _ref.route,\n    navigation = _ref.navigation;\n  var _route$params = route.params,\n    detalleMaterial = _route$params.detalleMaterial,\n    ejemplares = _route$params.ejemplares;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    users = _useState2[0],\n    setUsers = _useState2[1];\n  var _useUser = useUser(),\n    userInfo = _useUser.userInfo;\n  var accessToken = userInfo.access_token;\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    filteredUsers = _useState4[0],\n    setFilteredUsers = _useState4[1];\n  var _useState5 = useState([]),\n    _useState6 = _slicedToArray(_useState5, 2),\n    filteredMateriales = _useState6[0],\n    setFilteredMateriales = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    snackbarVisible = _useState8[0],\n    setSnackbarVisible = _useState8[1];\n  console.log(detalleMaterial);\n  console.log(ejemplares);\n  useEffect(function () {\n    navigation.setOptions({\n      title: detalleMaterial.titulo\n    });\n    var fetchUsers = function () {\n      var _ref2 = _asyncToGenerator(function* () {\n        try {\n          var usersResponse = yield AuthServices.listarUsuariosNoAdmin(accessToken, \"\");\n          console.log(usersResponse);\n          setUsers(usersResponse);\n        } catch (error) {\n          console.error(\"Error al obtener la lista de usuarios\", error);\n        }\n      });\n      return function fetchUsers() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    fetchUsers();\n  }, [detalleMaterial, ejemplares, accessToken]);\n  var handlePrestarMaterial = function handlePrestarMaterial() {\n    setSnackbarVisible(true);\n  };\n  var filterUsers = function filterUsers(text) {\n    var filtered = filterItems(text, users);\n    set;\n  };\n  var filterEjemplares = function filterEjemplares(text) {\n    var filtered = filterItems(text, ejemplares);\n  };\n  return _jsx(ScrollView, {\n    children: _jsx(TextInput, {\n      label: \"Ejemplares\",\n      value: ejemplares,\n      onChangeText: text\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    padding: 16\n  },\n  button: {\n    marginTop: 16\n  },\n  label: {\n    fontSize: 16,\n    marginBottom: 5\n  },\n  input: {\n    height: 40,\n    borderColor: \"gray\",\n    borderWidth: 1,\n    marginBottom: 10,\n    paddingHorizontal: 10\n  }\n});\nexport default PrestarMaterialScreen;","map":{"version":3,"names":["React","useState","useEffect","TextInput","Button","Snackbar","HelperText","List","axios","MaterialServices","AuthServices","useUser","jsx","_jsx","PrestarMaterialScreen","_ref","route","navigation","_route$params","params","detalleMaterial","ejemplares","_useState","_useState2","_slicedToArray","users","setUsers","_useUser","userInfo","accessToken","access_token","_useState3","_useState4","filteredUsers","setFilteredUsers","_useState5","_useState6","filteredMateriales","setFilteredMateriales","_useState7","_useState8","snackbarVisible","setSnackbarVisible","console","log","setOptions","title","titulo","fetchUsers","_ref2","_asyncToGenerator","usersResponse","listarUsuariosNoAdmin","error","apply","arguments","handlePrestarMaterial","filterUsers","text","filtered","filterItems","set","filterEjemplares","ScrollView","children","label","value","onChangeText","styles","StyleSheet","create","container","flex","justifyContent","alignItems","padding","button","marginTop","fontSize","marginBottom","input","height","borderColor","borderWidth","paddingHorizontal"],"sources":["/opt/frontend/app/screens/materiales/Actions/PrestarMaterialScreen.js"],"sourcesContent":["import { View, Text, StyleSheet } from \"react-native\";\nimport React, { useState, useEffect } from \"react\";\nimport {\n  TextInput,\n  Button,\n  Snackbar,\n  HelperText,\n  List,\n} from \"react-native-paper\";\nimport axios from \"axios\";\nimport MaterialServices from \"../../../services/MaterialServices\";\nimport AuthServices from \"../../../services/AuthServices\";\nimport { useUser } from \"../../../contexts/UserContext\";\nconst PrestarMaterialScreen = ({ route, navigation }) => {\n  const { detalleMaterial, ejemplares } = route.params;\n  const [users, setUsers] = useState([]);\n\n  const { userInfo } = useUser();\n  const accessToken = userInfo.access_token;\n\n  const [filteredUsers, setFilteredUsers] = useState([]);\n  const [filteredMateriales, setFilteredMateriales] = useState([]);\n\n  const [snackbarVisible, setSnackbarVisible] = useState(false);\n\n  console.log(detalleMaterial);\n  console.log(ejemplares);\n\n  useEffect(() => {\n    navigation.setOptions({\n      title: detalleMaterial.titulo,\n    });\n    const fetchUsers = async () => {\n      try {\n        const usersResponse = await AuthServices.listarUsuariosNoAdmin(\n          accessToken,\n          \"\"\n        );\n        console.log(usersResponse);\n        setUsers(usersResponse);\n      } catch (error) {\n        console.error(\"Error al obtener la lista de usuarios\", error);\n      }\n    };\n    fetchUsers();\n  }, [detalleMaterial, ejemplares, accessToken]);\n  const handlePrestarMaterial = () => {\n    // Aquí puedes realizar la lógica para guardar el nuevo material\n    // Puedes utilizar MaterialServices.crearMaterial() o axios.post() para enviar los datos al servidor\n\n    // Muestra un mensaje de éxito con Snackbar\n    setSnackbarVisible(true);\n  };\n\n  const filterUsers = (text) => {\n    const filtered = filterItems(text, users);\n    set;\n  };\n  const filterEjemplares = (text) => {\n    const filtered = filterItems(text, ejemplares);\n  };\n  return (\n    <ScrollView>\n      <TextInput \n      label=\"Ejemplares\"\n      value={ejemplares}\n      onChangeText={(text)}\n      />\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    padding: 16,\n  },\n  button: {\n    marginTop: 16,\n  },\n  label: {\n    fontSize: 16,\n    marginBottom: 5,\n  },\n  input: {\n    height: 40,\n    borderColor: \"gray\",\n    borderWidth: 1,\n    marginBottom: 10,\n    paddingHorizontal: 10,\n  },\n});\n\nexport default PrestarMaterialScreen;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}