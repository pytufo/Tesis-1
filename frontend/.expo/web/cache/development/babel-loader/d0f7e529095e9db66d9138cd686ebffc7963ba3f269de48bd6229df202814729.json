{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport LoginScreen from \"./screens/auth/LoginScreen\";\nimport MaterialListScreen from \"./screens/materiales/MaterialListScreen\";\nimport DetalleMaterialScreen from \"./screens/materiales/DetalleMaterialScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\nvar App = function App() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isLoggedIn = _useState2[0],\n    setIsLoggedIn = _useState2[1];\n  useEffect(function () {\n    checkAuthentication();\n  }, []);\n  var checkAuthentication = function () {\n    var _ref = _asyncToGenerator(function* () {\n      try {\n        var token = yield AsyncStorage.getItem('access_token');\n        if (token) {\n          setIsLoggedIn(true);\n        }\n      } catch (error) {\n        console.error('error al autenticar', error);\n      }\n    });\n    return function checkAuthentication() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  return _jsx(NavigationContainer, {\n    children: _jsx(Stack.Navigator, {\n      children: isLoggedIn ? _jsxs(_Fragment, {\n        children: [_jsx(Stack.Screen, {\n          name: \"MaterialList\",\n          component: MaterialListScreen\n        }), _jsx(Stack.Screen, {\n          name: \"DetalleMaterialScreen\",\n          component: DetalleMaterialScreen\n        })]\n      }) : _jsx(_Fragment, {\n        children: _jsx(Stack.Screen, {\n          name: \"Login\",\n          component: LoginScreen\n        })\n      })\n    })\n  });\n};\nexport default App;","map":{"version":3,"names":["React","useState","useEffect","NavigationContainer","createStackNavigator","AsyncStorage","LoginScreen","MaterialListScreen","DetalleMaterialScreen","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","Stack","App","_useState","_useState2","_slicedToArray","isLoggedIn","setIsLoggedIn","checkAuthentication","_ref","_asyncToGenerator","token","getItem","error","console","apply","arguments","children","Navigator","Screen","name","component"],"sources":["/opt/frontend/app/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\n\n// IMPORTAR PANTALLAS\nimport LoginScreen from \"./screens/auth/LoginScreen\";\n// import HomeScreen from \"./screens/HomeScreen\";\nimport MaterialListScreen from \"./screens/materiales/MaterialListScreen\";\nimport DetalleMaterialScreen from \"./screens/materiales/DetalleMaterialScreen\";\n\nconst Stack = createStackNavigator();\n\nconst App = () => {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  useEffect(() => {\n    checkAuthentication();\n  }, [])\n\n  const checkAuthentication = async () => {\n    try {\n      const token = await AsyncStorage.getItem('access_token');\n      if (token) {\n        setIsLoggedIn(true);\n      }\n    } catch (error) {\n      console.error ('error al autenticar', error)\n    }\n  };\n\n  return (\n    <NavigationContainer>      \n      <Stack.Navigator>\n        {isLoggedIn ? (\n          <>\n            <Stack.Screen name=\"MaterialList\" component={MaterialListScreen} />\n            <Stack.Screen name=\"DetalleMaterialScreen\" component={DetalleMaterialScreen} />\n          </>\n        ) : (\n          <>\n            <Stack.Screen name=\"Login\" component={LoginScreen} />\n          </>\n        )}\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,oBAAoB,QAAQ,yBAAyB;AAC9D,OAAOC,YAAY,MAAM,2CAA2C;AAIpE,OAAOC,WAAW;AAElB,OAAOC,kBAAkB;AACzB,OAAOC,qBAAqB;AAAmD,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE/E,IAAMC,KAAK,GAAGX,oBAAoB,CAAC,CAAC;AAEpC,IAAMY,GAAG,GAAG,SAANA,GAAGA,CAAA,EAAS;EAChB,IAAAC,SAAA,GAAoChB,QAAQ,CAAC,KAAK,CAAC;IAAAiB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA5CG,UAAU,GAAAF,UAAA;IAAEG,aAAa,GAAAH,UAAA;EAEhChB,SAAS,CAAC,YAAM;IACdoB,mBAAmB,CAAC,CAAC;EACvB,CAAC,EAAE,EAAE,CAAC;EAEN,IAAMA,mBAAmB;IAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,aAAY;MACtC,IAAI;QACF,IAAMC,KAAK,SAASpB,YAAY,CAACqB,OAAO,CAAC,cAAc,CAAC;QACxD,IAAID,KAAK,EAAE;UACTJ,aAAa,CAAC,IAAI,CAAC;QACrB;MACF,CAAC,CAAC,OAAOM,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAE,qBAAqB,EAAEA,KAAK,CAAC;MAC9C;IACF,CAAC;IAAA,gBATKL,mBAAmBA,CAAA;MAAA,OAAAC,IAAA,CAAAM,KAAA,OAAAC,SAAA;IAAA;EAAA,GASxB;EAED,OACEpB,IAAA,CAACP,mBAAmB;IAAA4B,QAAA,EAClBrB,IAAA,CAACK,KAAK,CAACiB,SAAS;MAAAD,QAAA,EACbX,UAAU,GACTN,KAAA,CAAAF,SAAA;QAAAmB,QAAA,GACErB,IAAA,CAACK,KAAK,CAACkB,MAAM;UAACC,IAAI,EAAC,cAAc;UAACC,SAAS,EAAE5B;QAAmB,CAAE,CAAC,EACnEG,IAAA,CAACK,KAAK,CAACkB,MAAM;UAACC,IAAI,EAAC,uBAAuB;UAACC,SAAS,EAAE3B;QAAsB,CAAE,CAAC;MAAA,CAC/E,CAAC,GAEHE,IAAA,CAAAE,SAAA;QAAAmB,QAAA,EACErB,IAAA,CAACK,KAAK,CAACkB,MAAM;UAACC,IAAI,EAAC,OAAO;UAACC,SAAS,EAAE7B;QAAY,CAAE;MAAC,CACrD;IACH,CACc;EAAC,CACC,CAAC;AAE1B,CAAC;AAED,eAAeU,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}