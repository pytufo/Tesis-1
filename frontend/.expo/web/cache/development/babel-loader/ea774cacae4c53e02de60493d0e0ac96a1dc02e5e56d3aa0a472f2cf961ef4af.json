{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { UserProvider, useUser } from \"./contexts/UserContext\";\nimport { Provider as PaperProvider, DefaultTheme } from \"react-native-paper\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport AuthStackScreen from \"./AuthStackScreen\";\nimport AppTabsScreen from \"./AppTabsScreens\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport Navbar from \"./components/Navbar\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\nvar App = function App() {\n  var _useEffect = useEffect(function () {\n      var checkAuthentication = function () {\n        var _ref = _asyncToGenerator(function* () {\n          try {\n            var token = yield AsyncStorage.getItem(\"access_token\");\n            setIsLoggedIn(!!token);\n          } catch (error) {\n            console.error(\"error al autenticar\", error);\n          }\n        });\n        return function checkAuthentication() {\n          return _ref.apply(this, arguments);\n        };\n      }();\n      checkAuthentication();\n    }, []),\n    isLoggedIn = _useEffect.isLoggedIn;\n  return _jsx(PaperProvider, {\n    theme: DefaultTheme,\n    children: _jsx(UserProvider, {\n      children: _jsxs(NavigationContainer, {\n        children: [_jsx(Stack.Navigator, {\n          headerMode: \"none\",\n          children: isLoggedIn ? _jsx(Stack.Screen, {\n            name: \"AppTabs\",\n            component: AppTabsScreen\n          }) : _jsx(Stack.Screen, {\n            name: \"AuthStack\",\n            component: AuthStackScreen\n          })\n        }), _jsx(ToastContainer, {})]\n      })\n    })\n  });\n};\nexport default App;","map":{"version":3,"names":["React","useState","useEffect","NavigationContainer","createStackNavigator","ToastContainer","UserProvider","useUser","Provider","PaperProvider","DefaultTheme","AsyncStorage","AuthStackScreen","AppTabsScreen","HomeScreen","Navbar","jsx","_jsx","jsxs","_jsxs","Stack","App","_useEffect","checkAuthentication","_ref","_asyncToGenerator","token","getItem","setIsLoggedIn","error","console","apply","arguments","isLoggedIn","theme","children","Navigator","headerMode","Screen","name","component"],"sources":["/opt/frontend/app/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nimport { UserProvider, useUser } from \"./contexts/UserContext\";\nimport { Provider as PaperProvider, DefaultTheme } from \"react-native-paper\";\n\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport AuthStackScreen from \"./AuthStackScreen\";\nimport AppTabsScreen from \"./AppTabsScreens\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport Navbar from \"./components/Navbar\";\n\nconst Stack = createStackNavigator();\n\nconst App = () => {\n  const {isLoggedIn} = \n  useEffect(() => {\n    const checkAuthentication = async () => {\n      try {\n        const token = await AsyncStorage.getItem(\"access_token\");\n        setIsLoggedIn(!!token);\n      } catch (error) {\n        console.error(\"error al autenticar\", error);\n      }\n    };\n    checkAuthentication();\n  }, []);\n\n  return (\n    <PaperProvider theme={DefaultTheme}>\n      <UserProvider>\n        <NavigationContainer>\n          <Stack.Navigator headerMode=\"none\">\n            {isLoggedIn ? (\n              <Stack.Screen name=\"AppTabs\" component={AppTabsScreen} />\n            ) : (\n              <Stack.Screen name=\"AuthStack\" component={AuthStackScreen} />\n            )}\n          </Stack.Navigator>\n          <ToastContainer />\n        </NavigationContainer>\n      </UserProvider>\n    </PaperProvider>\n  );\n};\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,oBAAoB,QAAQ,yBAAyB;AAC9D,SAASC,cAAc,QAAQ,gBAAgB;AAC/C,OAAO,uCAAuC;AAE9C,SAASC,YAAY,EAAEC,OAAO;AAC9B,SAASC,QAAQ,IAAIC,aAAa,EAAEC,YAAY,QAAQ,oBAAoB;AAE5E,OAAOC,YAAY,MAAM,2CAA2C;AACpE,OAAOC,eAAe;AACtB,OAAOC,aAAa;AACpB,OAAOC,UAAU;AACjB,OAAOC,MAAM;AAA4B,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEzC,IAAMC,KAAK,GAAGhB,oBAAoB,CAAC,CAAC;AAEpC,IAAMiB,GAAG,GAAG,SAANA,GAAGA,CAAA,EAAS;EAChB,IAAAC,UAAA,GACApB,SAAS,CAAC,YAAM;MACd,IAAMqB,mBAAmB;QAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,aAAY;UACtC,IAAI;YACF,IAAMC,KAAK,SAASf,YAAY,CAACgB,OAAO,CAAC,cAAc,CAAC;YACxDC,aAAa,CAAC,CAAC,CAACF,KAAK,CAAC;UACxB,CAAC,CAAC,OAAOG,KAAK,EAAE;YACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;UAC7C;QACF,CAAC;QAAA,gBAPKN,mBAAmBA,CAAA;UAAA,OAAAC,IAAA,CAAAO,KAAA,OAAAC,SAAA;QAAA;MAAA,GAOxB;MACDT,mBAAmB,CAAC,CAAC;IACvB,CAAC,EAAE,EAAE,CAAC;IAXCU,UAAU,GAAAX,UAAA,CAAVW,UAAU;EAajB,OACEhB,IAAA,CAACR,aAAa;IAACyB,KAAK,EAAExB,YAAa;IAAAyB,QAAA,EACjClB,IAAA,CAACX,YAAY;MAAA6B,QAAA,EACXhB,KAAA,CAAChB,mBAAmB;QAAAgC,QAAA,GAClBlB,IAAA,CAACG,KAAK,CAACgB,SAAS;UAACC,UAAU,EAAC,MAAM;UAAAF,QAAA,EAC/BF,UAAU,GACThB,IAAA,CAACG,KAAK,CAACkB,MAAM;YAACC,IAAI,EAAC,SAAS;YAACC,SAAS,EAAE3B;UAAc,CAAE,CAAC,GAEzDI,IAAA,CAACG,KAAK,CAACkB,MAAM;YAACC,IAAI,EAAC,WAAW;YAACC,SAAS,EAAE5B;UAAgB,CAAE;QAC7D,CACc,CAAC,EAClBK,IAAA,CAACZ,cAAc,IAAE,CAAC;MAAA,CACC;IAAC,CACV;EAAC,CACF,CAAC;AAEpB,CAAC;AAED,eAAegB,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}