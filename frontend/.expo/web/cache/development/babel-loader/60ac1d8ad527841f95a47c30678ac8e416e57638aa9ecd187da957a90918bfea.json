{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { UserProvider } from \"./contexts/UserContext\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport AuthStackScreen from \"./AuthStackScreen\";\nimport AppTabsScreen from \"./AppTabsScreens\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\nvar App = function App() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isLoggedIn = _useState2[0],\n    setIsLoggedIn = _useState2[1];\n  useEffect(function () {\n    var checkAuthentication = function () {\n      var _ref = _asyncToGenerator(function* () {\n        try {\n          var token = yield AsyncStorage.getItem(\"access_token\");\n          setIsLoggedIn(!!token);\n        } catch (error) {\n          console.error(\"error al autenticar\", error);\n        }\n      });\n      return function checkAuthentication() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    checkAuthentication();\n  }, []);\n  return _jsx(UserProvider, {\n    children: _jsxs(NavigationContainer, {\n      children: [_jsx(Stack.Navigator, {\n        headerMode: \"none\",\n        children: isLoggedIn ? _jsx(Stack.Screen, {\n          name: \"AppTabs\",\n          children: function children(props) {\n            return _jsx(AppTabsScreen, _objectSpread(_objectSpread({}, props), {}, {\n              setIsLoggedIn: setIsLoggedIn\n            }));\n          }\n        }) : _jsx(Stack.Screen, {\n          name: \"AuthStack\",\n          children: function children(props) {\n            return _jsx(AuthStackScreen, _objectSpread(_objectSpread({}, props), {}, {\n              setIsLoggedIn: setIsLoggedIn\n            }));\n          }\n        })\n      }), _jsx(ToastContainer, {})]\n    })\n  });\n};\nexport default App;","map":{"version":3,"names":["React","useState","useEffect","useCallback","NavigationContainer","createStackNavigator","ToastContainer","UserProvider","AsyncStorage","AuthStackScreen","AppTabsScreen","jsx","_jsx","jsxs","_jsxs","Stack","App","_useState","_useState2","_slicedToArray","isLoggedIn","setIsLoggedIn","checkAuthentication","_ref","_asyncToGenerator","token","getItem","error","console","apply","arguments","children","Navigator","headerMode","Screen","name","props","_objectSpread"],"sources":["/opt/frontend/app/App.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nimport { UserProvider } from \"./contexts/UserContext\";\n\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport AuthStackScreen from \"./AuthStackScreen\";\nimport AppTabsScreen from \"./AppTabsScreens\";\n\nconst Stack = createStackNavigator();\nconst App = () => {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);  \n  useEffect(() => {\n    const checkAuthentication = async () => {\n      try {\n        const token = await AsyncStorage.getItem(\"access_token\");\n        setIsLoggedIn(!!token);\n      } catch (error) {\n        console.error(\"error al autenticar\", error);\n      }\n    };\n    checkAuthentication();\n  }, []);\n\n  return (\n    <UserProvider>\n      <NavigationContainer>\n        <Stack.Navigator headerMode=\"none\">\n          {isLoggedIn ? (\n            <Stack.Screen\n              name=\"AppTabs\"\n              children={(props) => (\n                <AppTabsScreen {...props} setIsLoggedIn={setIsLoggedIn} />\n              )}\n            />\n          ) : (\n            <Stack.Screen\n              name=\"AuthStack\"\n              children={(props) => (\n                <AuthStackScreen\n                  {...props}\n                  setIsLoggedIn={setIsLoggedIn}                  \n                />\n              )}\n            />\n          )}\n        </Stack.Navigator>\n        <ToastContainer />\n      </NavigationContainer>\n    </UserProvider>\n  );\n};\n\nexport default App;\n"],"mappings":";;;;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AAC/D,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,oBAAoB,QAAQ,yBAAyB;AAC9D,SAASC,cAAc,QAAQ,gBAAgB;AAC/C,OAAO,uCAAuC;AAE9C,SAASC,YAAY;AAErB,OAAOC,YAAY,MAAM,2CAA2C;AACpE,OAAOC,eAAe;AACtB,OAAOC,aAAa;AAAyB,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE7C,IAAMC,KAAK,GAAGV,oBAAoB,CAAC,CAAC;AACpC,IAAMW,GAAG,GAAG,SAANA,GAAGA,CAAA,EAAS;EAChB,IAAAC,SAAA,GAAoChB,QAAQ,CAAC,KAAK,CAAC;IAAAiB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA5CG,UAAU,GAAAF,UAAA;IAAEG,aAAa,GAAAH,UAAA;EAChChB,SAAS,CAAC,YAAM;IACd,IAAMoB,mBAAmB;MAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,aAAY;QACtC,IAAI;UACF,IAAMC,KAAK,SAASjB,YAAY,CAACkB,OAAO,CAAC,cAAc,CAAC;UACxDL,aAAa,CAAC,CAAC,CAACI,KAAK,CAAC;QACxB,CAAC,CAAC,OAAOE,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;QAC7C;MACF,CAAC;MAAA,gBAPKL,mBAAmBA,CAAA;QAAA,OAAAC,IAAA,CAAAM,KAAA,OAAAC,SAAA;MAAA;IAAA,GAOxB;IACDR,mBAAmB,CAAC,CAAC;EACvB,CAAC,EAAE,EAAE,CAAC;EAEN,OACEV,IAAA,CAACL,YAAY;IAAAwB,QAAA,EACXjB,KAAA,CAACV,mBAAmB;MAAA2B,QAAA,GAClBnB,IAAA,CAACG,KAAK,CAACiB,SAAS;QAACC,UAAU,EAAC,MAAM;QAAAF,QAAA,EAC/BX,UAAU,GACTR,IAAA,CAACG,KAAK,CAACmB,MAAM;UACXC,IAAI,EAAC,SAAS;UACdJ,QAAQ,EAAE,SAAAA,SAACK,KAAK;YAAA,OACdxB,IAAA,CAACF,aAAa,EAAA2B,aAAA,CAAAA,aAAA,KAAKD,KAAK;cAAEf,aAAa,EAAEA;YAAc,EAAE,CAAC;UAAA;QAC1D,CACH,CAAC,GAEFT,IAAA,CAACG,KAAK,CAACmB,MAAM;UACXC,IAAI,EAAC,WAAW;UAChBJ,QAAQ,EAAE,SAAAA,SAACK,KAAK;YAAA,OACdxB,IAAA,CAACH,eAAe,EAAA4B,aAAA,CAAAA,aAAA,KACVD,KAAK;cACTf,aAAa,EAAEA;YAAc,EAC9B,CAAC;UAAA;QACF,CACH;MACF,CACc,CAAC,EAClBT,IAAA,CAACN,cAAc,IAAE,CAAC;IAAA,CACC;EAAC,CACV,CAAC;AAEnB,CAAC;AAED,eAAeU,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}