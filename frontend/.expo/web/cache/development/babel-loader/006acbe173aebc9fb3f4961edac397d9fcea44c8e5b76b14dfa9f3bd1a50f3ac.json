{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport LoginScreen from \"./screens/auth/LoginScreen\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport MaterialListScreen from \"./screens/materiales/MaterialListScreen\";\nimport DetalleMaterialScreen from \"./screens/materiales/DetalleMaterialScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\nvar App = function App() {\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    isLoggedIn = _useState2[0],\n    setIsLoggedIn = _useState2[1];\n  useEffect(function () {\n    checkAuthentication();\n  }, []);\n  if (isLoggedIn === null) {\n    return null;\n  }\n  return _jsx(NavigationContainer, {\n    children: _jsx(Stack.Navigator, {\n      children: isLoggedIn ? _jsxs(_Fragment, {\n        children: [_jsx(Stack.Screen, {\n          name: \"Home\",\n          component: HomeScreen\n        }), _jsx(Stack.Screen, {\n          name: \"MaterialList\",\n          component: MaterialListScreen\n        }), _jsx(Stack.Screen, {\n          name: \"DetalleMaterialScreen\",\n          component: DetalleMaterialScreen\n        })]\n      }) : _jsx(_Fragment, {\n        children: _jsx(Stack.Screen, {\n          name: \"Login\",\n          component: LoginScreen\n        })\n      })\n    })\n  });\n};\nexport default App;","map":{"version":3,"names":["React","useState","useEffect","NavigationContainer","createStackNavigator","AsyncStorage","LoginScreen","HomeScreen","MaterialListScreen","DetalleMaterialScreen","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","Stack","App","_useState","_useState2","_slicedToArray","isLoggedIn","setIsLoggedIn","checkAuthentication","children","Navigator","Screen","name","component"],"sources":["/opt/frontend/app/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\n\n// IMPORTAR PANTALLAS\nimport LoginScreen from \"./screens/auth/LoginScreen\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport MaterialListScreen from \"./screens/materiales/MaterialListScreen\";\nimport DetalleMaterialScreen from \"./screens/materiales/DetalleMaterialScreen\";\n\nconst Stack = createStackNavigator();\n\nconst App = () => {\n  const [isLoggedIn, setIsLoggedIn] = useState(null);\n\n  useEffect(() => {\n    checkAuthentication();\n  }, []);\n\n\n\n  if (isLoggedIn === null) {\n    return null;\n  }\n  return (\n    <NavigationContainer>\n      <Stack.Navigator>\n        {isLoggedIn ? (\n          <>\n            <Stack.Screen name=\"Home\" component={HomeScreen} />\n            <Stack.Screen name=\"MaterialList\" component={MaterialListScreen} />\n            <Stack.Screen\n              name=\"DetalleMaterialScreen\"\n              component={DetalleMaterialScreen}\n            />\n          </>\n        ) : (\n          <>\n            <Stack.Screen name=\"Login\" component={LoginScreen} />\n          </>\n        )}\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n};\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,oBAAoB,QAAQ,yBAAyB;AAC9D,OAAOC,YAAY,MAAM,2CAA2C;AAGpE,OAAOC,WAAW;AAClB,OAAOC,UAAU;AACjB,OAAOC,kBAAkB;AACzB,OAAOC,qBAAqB;AAAmD,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE/E,IAAMC,KAAK,GAAGZ,oBAAoB,CAAC,CAAC;AAEpC,IAAMa,GAAG,GAAG,SAANA,GAAGA,CAAA,EAAS;EAChB,IAAAC,SAAA,GAAoCjB,QAAQ,CAAC,IAAI,CAAC;IAAAkB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA3CG,UAAU,GAAAF,UAAA;IAAEG,aAAa,GAAAH,UAAA;EAEhCjB,SAAS,CAAC,YAAM;IACdqB,mBAAmB,CAAC,CAAC;EACvB,CAAC,EAAE,EAAE,CAAC;EAIN,IAAIF,UAAU,KAAK,IAAI,EAAE;IACvB,OAAO,IAAI;EACb;EACA,OACEV,IAAA,CAACR,mBAAmB;IAAAqB,QAAA,EAClBb,IAAA,CAACK,KAAK,CAACS,SAAS;MAAAD,QAAA,EACbH,UAAU,GACTN,KAAA,CAAAF,SAAA;QAAAW,QAAA,GACEb,IAAA,CAACK,KAAK,CAACU,MAAM;UAACC,IAAI,EAAC,MAAM;UAACC,SAAS,EAAErB;QAAW,CAAE,CAAC,EACnDI,IAAA,CAACK,KAAK,CAACU,MAAM;UAACC,IAAI,EAAC,cAAc;UAACC,SAAS,EAAEpB;QAAmB,CAAE,CAAC,EACnEG,IAAA,CAACK,KAAK,CAACU,MAAM;UACXC,IAAI,EAAC,uBAAuB;UAC5BC,SAAS,EAAEnB;QAAsB,CAClC,CAAC;MAAA,CACF,CAAC,GAEHE,IAAA,CAAAE,SAAA;QAAAW,QAAA,EACEb,IAAA,CAACK,KAAK,CAACU,MAAM;UAACC,IAAI,EAAC,OAAO;UAACC,SAAS,EAAEtB;QAAY,CAAE;MAAC,CACrD;IACH,CACc;EAAC,CACC,CAAC;AAE1B,CAAC;AAED,eAAeW,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}